function drawClock(time) {
  const digits = {
    0: [
      ["*", "*", "*"],
      ["*", " ", "*"],
      ["*", " ", "*"],
      ["*", " ", "*"],
      ["*", " ", "*"],
      ["*", " ", "*"],
      ["*", "*", "*"],
    ],
    1: [
      [" ", " ", "*"],
      [" ", " ", "*"],
      [" ", " ", "*"],
      [" ", " ", "*"],
      [" ", " ", "*"],
      [" ", " ", "*"],
      [" ", " ", "*"],
    ],
    2: [
      ["*", "*", "*"],
      [" ", " ", "*"],
      [" ", " ", "*"],
      ["*", "*", "*"],
      ["*", " ", " "],
      ["*", " ", " "],
      ["*", "*", "*"],
    ],
    3: [
      ["*", "*", "*"],
      [" ", " ", "*"],
      [" ", " ", "*"],
      ["*", "*", "*"],
      [" ", " ", "*"],
      [" ", " ", "*"],
      ["*", "*", "*"],
    ],
    4: [
      ["*", " ", "*"],
      ["*", " ", "*"],
      ["*", " ", "*"],
      ["*", "*", "*"],
      [" ", " ", "*"],
      [" ", " ", "*"],
      [" ", " ", "*"],
    ],
    5: [
      ["*", "*", "*"],
      ["*", " ", " "],
      ["*", " ", " "],
      ["*", "*", "*"],
      [" ", " ", "*"],
      [" ", " ", "*"],
      ["*", "*", "*"],
    ],
    6: [
      ["*", "*", "*"],
      ["*", " ", " "],
      ["*", " ", " "],
      ["*", "*", "*"],
      ["*", " ", "*"],
      ["*", " ", "*"],
      ["*", "*", "*"],
    ],
    7: [
      ["*", "*", "*"],
      [" ", " ", "*"],
      [" ", " ", "*"],
      [" ", " ", "*"],
      [" ", " ", "*"],
      [" ", " ", "*"],
      [" ", " ", "*"],
    ],
    8: [
      ["*", "*", "*"],
      ["*", " ", "*"],
      ["*", " ", "*"],
      ["*", "*", "*"],
      ["*", " ", "*"],
      ["*", " ", "*"],
      ["*", "*", "*"],
    ],
    9: [
      ["*", "*", "*"],
      ["*", " ", "*"],
      ["*", " ", "*"],
      ["*", "*", "*"],
      [" ", " ", "*"],
      [" ", " ", "*"],
      ["*", "*", "*"],
    ],
    ":": [[" "], [" "], ["*"], [" "], ["*"], [" "], [" "]],
  };
  const result = [];
  result[0] = [
    ...digits[time[0]][0],
    " ",
    ...digits[time[1]][0],
    " ",
    ...digits[time[2]][0],
    " ",
    ...digits[time[3]][0],
    " ",
    ...digits[time[4]][0],
  ];
  result[1] = [
    ...digits[time[0]][1],
    " ",
    ...digits[time[1]][1],
    " ",
    ...digits[time[2]][1],
    " ",
    ...digits[time[3]][1],
    " ",
    ...digits[time[4]][1],
  ];
  result[2] = [
    ...digits[time[0]][2],
    " ",
    ...digits[time[1]][2],
    " ",
    ...digits[time[2]][2],
    " ",
    ...digits[time[3]][2],
    " ",
    ...digits[time[4]][2],
  ];
  result[3] = [
    ...digits[time[0]][3],
    " ",
    ...digits[time[1]][3],
    " ",
    ...digits[time[2]][3],
    " ",
    ...digits[time[3]][3],
    " ",
    ...digits[time[4]][3],
  ];
  result[4] = [
    ...digits[time[0]][4],
    " ",
    ...digits[time[1]][4],
    " ",
    ...digits[time[2]][4],
    " ",
    ...digits[time[3]][4],
    " ",
    ...digits[time[4]][4],
  ];
  result[5] = [
    ...digits[time[0]][5],
    " ",
    ...digits[time[1]][5],
    " ",
    ...digits[time[2]][5],
    " ",
    ...digits[time[3]][5],
    " ",
    ...digits[time[4]][5],
  ];
  result[6] = [
    ...digits[time[0]][6],
    " ",
    ...digits[time[1]][6],
    " ",
    ...digits[time[2]][6],
    " ",
    ...digits[time[3]][6],
    " ",
    ...digits[time[4]][6],
  ];

  return result;
}

const answer1 = drawClock("01:30"); // ⬇️
console.log('\n' + answer1.map(r => r.join(' ')).join('\n'))

/* 
[
  ['*', '*', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', '*', '*', ' ', '*', '*', '*'],
  ['*', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', '*'],
  ['*', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*'],
  ['*', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', '*', '*', ' ', '*', ' ', '*'],
  ['*', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*'],
  ['*', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', '*'],
  ['*', '*', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', '*', '*', ' ', '*', '*', '*']
]
*/

/* 
    Puntos conseguidos: 90
    677 ops/s (Higher is better)
    Cognitive complexity: 1 (Lower is better)
*/
